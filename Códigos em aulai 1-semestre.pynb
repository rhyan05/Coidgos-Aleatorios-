{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1D2xQMf6HvCSw-QJvKHg2GaaIZ9owg7K_","timestamp":1691853974878}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# ***WHILE***"],"metadata":{"id":"-marhbneaAjp"}},{"cell_type":"code","source":["x = int(input('Valor: '))\n","qtd_exibidos = 0\n","while qtd_exibidos < 5:\n","  x += 1\n","  print(x)\n","  qtd_exibidos += 1"],"metadata":{"id":"Yow9MRgDUR3m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["inicio = int(input('Início: '))\n","fim = int(input('Fim: '))\n","x = inicio\n","while x <= fim:\n","  print(x)\n","  x += 1"],"metadata":{"id":"p4aNKxhSUncG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["executa = input('Executar o bloco do laço: ')\n","contador = 0\n","while executa == 'sim':\n","  contador += 1\n","  executa = input('Executar o bloco do laço de novo: ')\n","print(f'O bloco do laço foi executado {contador} vezes')"],"metadata":{"id":"doojDDOMUzBm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["aposta = input('Deseja apostar?')\n","contador = 0\n","while aposta == 'sim':\n","  contador += 1\n","  aposta = input('Desaja apostar de novo?')\n","print('Você apostou', contador, 'vezes')"],"metadata":{"id":"NnKnhrIhVYxu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***WHILE COM IF***"],"metadata":{"id":"D7-CNy11aG5b"}},{"cell_type":"code","source":["cont = 1\n","while cont<=10:\n","   num = int(input('Escreva um número'))\n","   if num > 10:\n","     print('Maior que 10')\n","   cont+=1"],"metadata":{"id":"DPZMPbKlZw6w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cont=1\n","acum=0\n","\n","while cont<=10:\n","  num = int(input())\n","  acum=acum+num\n","  cont+=1\n","  print(acum)\n","\n"],"metadata":{"id":"Udiv-GLJr4zs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cont=1\n","acum=0\n","\n","while cont<=5:\n","  idade = int(input())\n","  cont+=1\n","  if idade>=18:\n","    acum+=1\n","print(acum, 'pessoas tem 18 anos'1)\n"],"metadata":{"id":"3DmyJsRruW8U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Um programa que imprima todos os números pares entre 100 e 200"],"metadata":{"id":"To8umM1ojjuW"}},{"cell_type":"code","source":["i=100\n","quant=0\n","while i<=200:\n","  if i%2==0:\n","    quant+=1\n","  i+=1\n","print(quant)"],"metadata":{"id":"JFx_nbUm8HuE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cont = 1\n","acum = 0\n","acum1 = 0\n","acum2 = 0\n","\n","porc = (acum2/10) * 100\n","\n","\n","while cont < 2:\n","  idade = int(input('Idade:'))\n","  altura = float(input('Altura:'))\n","  peso = float(input('Peso:'))\n","if idade >= 50:\n","  acum+= 1\n","if idade<=20 and idade>=10:\n","  acum1+=altura\n","  acum1+=1\n","  media = acum1/cont\n","cont+=1\n","\n","print(\"A\", acum)\n","print(\"B\", media)\n","print(\"C\", porc, \"%\")\n","\n"],"metadata":{"id":"8qRKLLpa5lvp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Um programa que receba 10 números e que calcule e mostre a quantidade de números entre 30 e 90"],"metadata":{"id":"c2XS32eHjvgp"}},{"cell_type":"code","source":["n2 = 30\n","n3 = 90\n","cont = 1\n","acum = 0\n","\n","while cont<= 10:\n","  n1 = int(input('número:'))\n","  if n1>=30 and n1<=90:\n","    acum+=1\n","  cont+=1\n","print(acum, 'números')"],"metadata":{"id":"FtLtK-iq3kn9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Um programa que verifique se a senha 4531 foi digitada corretamente, caso não seja deverá solicitar a senha até acertá-la"],"metadata":{"id":"k7x_cG1hj0Sc"}},{"cell_type":"code","source":["senhaCorreta = 4531\n","\n","while senha!= senhaCorreta:\n","  senha = int(input())\n","  print('Senha incorreta')\n","print('Bem vindo')"],"metadata":{"id":"wZ4-I531V_ER"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Um programa que receba várias idades e que calcule e mostre a média das idades digitadas. Finalize quando o usuário digitar o número 0"],"metadata":{"id":"B2hSbk0Jj3Jj"}},{"cell_type":"code","source":["finalizar = 1\n","quant = 0\n","acum = 0\n","\n","while finalizar !=0:\n","  idade = int(input())\n","  quant+=1\n","  acum = acum+idade\n","  media = acum / quant\n","  if idade == 0:\n","    finalizar = 0\n","    print('Média =', media)"],"metadata":{"id":"weCbjXlDYPe5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***ELIF***"],"metadata":{"id":"HwKjEGWEaZLv"}},{"cell_type":"markdown","source":["Um programa que receba 20 números e que apresente a quantidade números postivos, negativos e igual a zero."],"metadata":{"id":"8S91B-ooj7Cq"}},{"cell_type":"code","source":["i = 1\n","negativo = 0\n","positivo = 0\n","zero = 0\n","\n","while i<=10:\n","  num = int(input())\n","  if num == 0:\n","    zero+=1\n","  elif num >=0:\n","    positivo +=1\n","  elif num <=0:\n","    negativo +=1\n","  i+=1\n","print('Negativos =', negativo)\n","print('Positivos =', positivo)\n","print('Zeros =', zero)\n"],"metadata":{"id":"2SbiHi-SbYeI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***WHILE TRUE***"],"metadata":{"id":"f7AlT1Sgakv7"}},{"cell_type":"markdown","source":["Um programa que apresente um menu de opções para o cálculo das seguintes operações entre dois números: adição, subtração, multiplicação e divisão. O programa deve possibilitar ao usuário a escolha da operação desejada, a exibição do resultado e a votla do menu de opções. O programa só termina quando for escolhida a opção de saída."],"metadata":{"id":"Z04wLkL5j-yC"}},{"cell_type":"code","source":["print('''Menu:\n","      1. Adição\n","      2. Subtração\n","      3. Multiplicação\n","      4. Divisão\n","      5. Sair''')\n","\n","while True:\n","  option = int(input())\n","\n","  if option == 5:\n","    break\n"],"metadata":{"id":"hyEReuL5ewK4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["total = 0\n","quero_comprar = True # será usada como flag booleana no loop.\n","while quero_comprar:\n","  preco = float(input('Preço: '))\n","  total += preco\n","  opcao = input('Continuar comprando (s/n)? ')\n","  if opcao == 'n':\n","      quero_comprar = False\n","\n","print(f'Total da compra: R$ {total:.2f}')"],"metadata":{"id":"CvMjbXgPgWhv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["credito = float(input('Seu crédito: R$ '))\n","while credito > 0:\n","  item = float(input('Preço do item: R$ '))\n","  if item > credito:\n","    print('Compra negada! Ultrapassa seu crédito.')\n","    break\n","  credito -= item\n","print(f'Crédito restante: R$ {credito:.2f}')"],"metadata":{"id":"IicPR1iPl7rP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Escreva um trecho de um programa que lê e validade se a nota digitada de um aluno está entre 0 e 10."],"metadata":{"id":"H-bI1o-WyWgm"}},{"cell_type":"code","source":["while True:\n","  nota = int(input())\n","  if nota >=0 and nota <=10:\n","    print('está entre 0 e 10')\n","    break\n","  else:\n","    print('não está entre 0 e 10')"],"metadata":{"id":"aLic6mpXv8DA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***WHILE DENTRO DE WHILE***"],"metadata":{"id":"aG9esTphat4c"}},{"cell_type":"markdown","source":["Faça um programa que imprima as tabuadas de multiplicação de 1 a 10"],"metadata":{"id":"SdFHIKZuyeSN"}},{"cell_type":"code","source":["num = int(input('Coloque o número desejado'))\n","\n","i= 1\n","while i<=num:\n","  j=1\n","  while j<=10:\n","    tabuada = num * j\n","    print(num,'x',j,'=',tabuada)\n","    j+=1\n","    i+=1"],"metadata":{"id":"wYqjvYVPyTRw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***WHILE NO IF***"],"metadata":{"id":"mKonFCuYa1OL"}},{"cell_type":"code","source":["num = int(input())\n","j=1\n","\n","if num >= 0 and num <= 10:\n","    while j<=10:\n","        print(num,'x',j,'=',num * j)\n","        j+=1\n","        i+=1"],"metadata":{"id":"OBnBck31YRTz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Um professor possui n turmas e cada turma possui m alunos. Solicite que o usuário informe a quantidade de turmas e a quantidade de alunos de cada turma. Construa um programa que leia a nota dos alunos de cada uma das turmas e exibe a média das notas por turma."],"metadata":{"id":"FeeZ4TNWzZ7I"}},{"cell_type":"code","source":["finalizar = True       #usar while para as turmas\n","acum = 0\n","quant_nota = 0\n","x = 1\n","\n","while finalizar:\n","  alunos_turma = int(input('Coloque a quantia de alunos'))\n","  while x <= alunos_turma:\n","    notas = int(input('Coloque as notas'))\n","    x+=1\n","    acum = acum + notas\n","    media = acum / alunos_turma\n","  print('Média =', media)\n","  str(input('Deseja adicionar mais uma turma? (s/n)'))\n","  if 'n':\n","    False\n","  else:\n","    True"],"metadata":{"id":"mpqgzq86zZWA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Programa que fala a média de salário e os que estão debaixo da média (SEM LISTA)"],"metadata":{"id":"Kn6Ls970kNCC"}},{"cell_type":"code","source":["soma = 0                                             #sem lista\n","\n","salario_0 = float(input('Salário: R$ '))\n","soma += salario_0\n","\n","salario_1 = float(input('Salário: R$ '))\n","soma += salario_1\n","\n","salario_2 = float(input('Salário: R$ '))\n","soma += salario_2\n","\n","salario_3 = float(input('Salário: R$ '))\n","soma += salario_3\n","media = soma / 4\n","print(f'Média = R$ {media:.2f}')\n","\n","if salario_0 < media:\n","  print(f'Abaixo da média: R$ {salario_0:.2f}')\n","if salario_1 < media:\n","  print(f'Abaixo da média: R$ {salario_1:.2f}')\n","if salario_2 < media:\n","  print(f'Abaixo da média: R$ {salario_2:.2f}')\n","if salario_3 < media:\n","  print(f'Abaixo da média: R$ {salario_3:.2f}')"],"metadata":{"id":"9omOHA3zhvdB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Programa que fala a média de salário e os que estão debaixo da média (COM LISTA)"],"metadata":{"id":"dVSs05JLkXhb"}},{"cell_type":"code","source":["salarios = [0, 0, 0, 0]                            #com lista\n","soma = 0\n","\n","salarios[0] = float(input('Salário: R$ '))\n","soma += salarios[0]\n","\n","salarios[1] = float(input('Salário: R$ '))\n","soma += salarios[1]\n","\n","salarios[2] = float(input('Salário: R$ '))\n","soma += salarios[2]\n","\n","salarios[3] = float(input('Salário: R$ '))\n","soma += salarios[3]\n","media = soma / 4\n","print(f'Média = R$ {media:.2f}')\n","\n","if salarios[0] < media:\n","  print(f'Abaixo da média: R$ {salarios[0]:.2f}')\n","if salarios[1] < media:\n","  print(f'Abaixo da média: R$ {salarios[1]:.2f}')\n","if salarios[2] < media:\n","  print(f'Abaixo da média: R$ {salarios[2]:.2f}')\n","if salarios[3] < media:\n","  print(f'Abaixo da média: R$ {salarios[3]:.2f}')"],"metadata":{"id":"jpKTPOmjiaAR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Programa que apresenta um triângulo retângulo com o alfabeto"],"metadata":{"id":"f7LJw1vpbB1D"}},{"cell_type":"code","source":["num = int(input())\n","alfabeto = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]\n","if 1<=num<=26:\n","  for i in range(num):\n","    print(alfabeto[i] * (i + 1))\n"],"metadata":{"id":"yY4xCHdZn0Is"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***FOR***"],"metadata":{"id":"kWSoqJ5RbEZb"}},{"cell_type":"markdown","source":["Programa para demonstrar o \"for\"\n","Programa para printar o alfabeto na sequência"],"metadata":{"id":"G869W8pVW9a_"}},{"cell_type":"code","source":["for letra in 'abcdefghijklmnopqrstuvwxyz':\n","  print(letra)\n","  print()\n","for letra in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n","  print(letra)\n"],"metadata":{"id":"stqIwl4-5_lF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Programa para demonstrar o \"for\" mostrando a média dos salários e quem está abaixo da média"],"metadata":{"id":"C7cV-scDXP7l"}},{"cell_type":"code","source":["salarios = []\n","soma = 0\n","\n","for _ in range(4):\n","  salario = float(input('Salário: R$ '))\n","  soma += salario\n","  salarios.append(salario)\n","\n","media = soma / 4\n","print(f'Média = R$ {media:.2f}')\n","for salario in salarios:\n","  if salario < media:\n","    print(f'Abaixo da média: R$ {salario:.2f}')"],"metadata":{"id":"H_Ek9CeM4hl9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Programa para demonstrar o \"for\" mostrando os nomes que começam com vogal"],"metadata":{"id":"oH3vwwoJX_AU"}},{"cell_type":"code","source":["nomes = []\n","for _ in range(5):\n","  nomes.append(input('Nome: '))\n","  qtd = 0\n","for nome in nomes:\n","  if (nome[0]=='A' or nome[0]=='E' or nome[0]=='I' or\n","    nome[0]=='O' or nome[0]=='U'):\n","      ]qtd += 1\n","\n","print(f'{qtd} dos nomes começam com vogal')"],"metadata":{"id":"aKXKPDOI7gOU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["AC 3 - Doação (ERRADO)"],"metadata":{"id":"pIw5qG4UYGW6"}},{"cell_type":"code","source":["deposito = []\n","\n","while True:\n","  depositado = float(input())\n","  deposito.append(depositado)\n","  if depositado == -1.0:\n","    break\n","for depositado in deposito:\n","  conversao = depositado * 2.5\n","  print(f'VC$ {conversao:.2f}')\n","  print(f'RS$ {depositado:.2f}')"],"metadata":{"id":"bo1NByia8NTO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça um programa que leia cinco notas e as armazene numa lista e depois calcule a média aritmética."],"metadata":{"id":"E3R7aLnma06_"}},{"cell_type":"code","source":["notas = []\n","cont = 1\n","acum = 0\n","\n","while cont <= 5:\n","  nota = int(input())\n","  notas.append(nota)\n","  cont+=1\n","  acum = acum + nota\n","\n","media = acum / cont\n","print(f'Média ={media:.2f}')\n"],"metadata":{"id":"3hflka8ibAYi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça um programa que receba 20 números inteiros e armazene-os numa lista. Armazene os números pares na lista PAR e os números ímpares em outra lista. Imprima as três listas. Utilize o for."],"metadata":{"id":"jYzHKQQSa4nd"}},{"cell_type":"code","source":["LISTA = []\n","PAR = []\n","IMPAR = []\n","\n","for _ in range(4):\n","  num = int(input())\n","  LISTA.append(num)\n","  if num % 2 == 1:\n","     IMPAR.append(num)\n","  else:\n","     PAR.append(num)\n","\n","print('Números =', LISTA)\n","print('Par =', PAR)\n","print('Ímpar =', IMPAR)\n"],"metadata":{"id":"aA94f7zJbAuK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça um programa que leia uma lista de 10 posições de números inteiros e mostre somente os números positivos."],"metadata":{"id":"QVzfKEbga4u1"}},{"cell_type":"code","source":["lista = []\n","positivos = []\n","negativos = []\n","\n","\n","for _ in range(4):\n","  num = int(input())\n","  if num >= 0:\n","    positivos.append(num)\n","  else:\n","    negativos.append(num)\n","\n","print('Positivos =', positivos)"],"metadata":{"id":"0nYBB9aTbBMr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça um programa que leia duas listas de 5 posições cada e faça a multiplicação dos elementos do mesmo índice, colocando o resultado numa terceira lista. Mostre a lista resultante. **(COM ZIP) NÃO APRENDEMOS AINDA**"],"metadata":{"id":"qNzP99iDa43m"}},{"cell_type":"code","source":["lista1 = []\n","lista2 = []\n","lista3 = []\n","\n","for _ in range(2):\n","  num1 = int(input('Lista 1 = '))\n","  lista1.append(num1)\n","for _ in range(2):\n","  num2 = int(input('Lista 2 = '))\n","  lista2.append(num2)\n","\n","produto = [x*y for x,y in zip(lista1,lista2)]\n","lista3.append(produto)\n","\n","print(lista3)"],"metadata":{"id":"LwcvAwxNbBmc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça um programa que lê cinco números, armazene-os numa lista e depois solicita ao usuário escolher um número a mostrar. Se o usuário digitar 2 ele imprimirá o segundo número e assim sucessivamente até ele digitar 0 para sair."],"metadata":{"id":"bHezAdeIsHFJ"}},{"cell_type":"code","source":["num = [0,0,0,0,0]\n","i=0\n","while i < 5:\n","  num[i] = int(input())\n","  i+=1\n","while True:\n","  escolhido = int(input())\n","  if escolhido == 0:\n","    break\n","  print(num[escolhido-1])\n"],"metadata":{"id":"NQ6SMQbZsNin"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ***LISTAS E DEF***"],"metadata":{"id":"ByiWsyUfbhBM"}},{"cell_type":"markdown","source":["Faça um programa que lê números até que o 0 seja digitado. Esse programa depois deverá imprimi-los na mesma ordem em que foram digitados."],"metadata":{"id":"Mwmz07OtsHOx"}},{"cell_type":"code","source":["lista = []\n","num = int(input())\n","\n","while num != 0:\n","  lista.append(num)\n","  num = int(input())\n","\n","\n","print('Números digitados =', lista)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2P-M2_Op7sC0","executionInfo":{"status":"ok","timestamp":1682604864176,"user_tz":180,"elapsed":8552,"user":{"displayName":"Lucas Seiti Kawaguchi Goto","userId":"15614933718590696321"}},"outputId":"2fcb3fb5-eda0-4cbb-f1bf-137c1625036c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","0\n","Números digitados = [1, 2, 3]\n"]}]},{"cell_type":"markdown","source":["Faça um programa que leia duas listas até que o usuário digite 0 e que gere uma terceira com os elementos das duas primeiras."],"metadata":{"id":"gCnLTetvsHXK"}},{"cell_type":"code","source":["lista1 = []\n","lista2 = []\n","\n","num1 = int(input('Lista 1 = '))\n","while True:\n","  lista1.append(num1)\n","  num1 = int(input('Lista 1 = '))\n","  if num1 == 0:\n","    break\n","\n","num2 = int(input('Lista 2 = '))\n","while True:\n","  lista2.append(num2)\n","  num2 = int(input('Lista 2 = '))\n","  if num2 == 0:\n","    break\n","print('Números (Lista 1) =', lista1)\n","print('Números (Lista 2) =', lista2)\n","print('Números (Lista 3) =', lista1 + lista2)"],"metadata":{"id":"mYIJ75GA_tMW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Faça uma função que leia uma lista de 10 números inteiros, calcule e mostre a soma dos quadrados dos elementos dessa lista."],"metadata":{"id":"i9QnQ7D-sHgA"}},{"cell_type":"code","source":["lista = []\n","\n","for _ in range(2):\n","  num = int(input('Insira o número'))\n","  lista.append(num)\n","\n","print('Soma =',sum(lista))\n"],"metadata":{"id":"8iAW920wB-dY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Crie uma função que leia uma quantidade indeterminada de valores inteiros, armazene em duas lista (A e B) e encerre a entrada de cada lista quando o usuário informar um valor ingual a -1 que não deve ser armazenado. Exiba o valor máximo e mínimo das duas listas."],"metadata":{"id":"JNrlud4FlcJb"}},{"cell_type":"code","source":["A = []\n","B = []\n","\n","num1 = int(input('Insira os números para a lista A: '))\n","while True:\n","  A.append(num1)\n","  num1 = int(input('Insira os números para a lista A: '))\n","  if num1 == -1:\n","    break\n","\n","num2 = int(input('Insira os números para a lista B: '))\n","while True:\n","  B.append(num2)\n","  num2 = int(input('Insira os números para a lista B: '))\n","  if num2 == -1:\n","    break\n","\n","print('Menor = ', min(A), 'Maior = ', max(A))\n","print('Menor = ', min(B), 'Maior = ', max(B))"],"metadata":{"id":"iTkZCoJnlgti"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def troca(s, i, j):\n","  s[i], s[j] = s[j], s[i]\n","\n","lista = [40, 30, 20, 50, 10]\n","\n","for i in range(len(lista)-1):\n","  if lista[i] > lista[i+1]:\n","    troca(lista, i, i+1)\n","print(lista)\n","\n","def empurra(s, n):\n","  for i in range(n-1):\n","    if s[i] > s[i+1]:\n","      troca(s, i, i+1)"],"metadata":{"id":"GdfcJE_LbgDi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["AC 4"],"metadata":{"id":"qmjMgPPtliea"}},{"cell_type":"code","source":["pagamento = 0\n","divida = int(input())\n","valor = int(input())\n","\n","while divida != 0:\n","  pagamento += 1\n","\n","  if divida >= valor:\n","    antes = divida\n","    divida = divida - valor\n","    depois = divida\n","  else:\n","    antes = divida\n","    divida = divida - divida\n","    depois = divida\n","\n","  print('pagamento:', pagamento)\n","  print('antes =', antes)\n","  print('depois =', depois)\n","  print('-----')"],"metadata":{"id":"rgohE_Jrbw3J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = int(input())\n","B = int(input())\n","i = 1\n","\n","if A>B:\n","  print('Nenhuma tabuada no intervalo!')\n","\n","for i in range(A,B+1):\n","  for mult in range(1, 11):\n","    print(i, 'x', mult, '=', i*mult)\n","  print('----------')"],"metadata":{"id":"IuyPj501lgzz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for num in range(2, 101):\n","    # Verifica se o número é primo\n","    for i in range(2, num):\n","        if (num % i) == 0:\n","            break\n","    else:\n","        print(num)"],"metadata":{"id":"yQGShVEV_h8M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def primo(i):\n","  if i < 2:\n","    return False\n","  for n in range(2, int(i**0.5)+ 1):\n","    if i % n == 0:\n","      return False\n","  return True\n","\n","ini = int(input())\n","fim = int(input())\n","lista = []\n","if ini <= fim <= 5000:\n","  for i in range (ini, fim+1):\n","    if primo(i):\n","      lista.append(i)\n","if len(lista) != 0:\n","  print(*lista, sep='\\n')\n","print(f'primos: {len(lista)}')"],"metadata":{"id":"l8QdfTPDYPPI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lista = []\n","\n","while True:\n","  n1 = int(input())\n","  if n1<0:\n","    break\n","  lista.append(n1)\n","med = sum(lista)/len(lista)\n","\n","print(f'MEDIA: {med:.2f}')\n","\n","for i in lista:\n","  if i<med:\n","    print(i)"],"metadata":{"id":"LoJSx1yCZipr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lista = []\n","\n","lista= input().split()\n","if num !=[]:\n","  for i in range(len(lista)):\n","    lista[i] = int(lista[i])\n","\n","def exibir(merc):\n","  merc.sort()\n","  for i in range(len(merc)):\n","    if (i < len(merc) - 1):\n","      print(merc[i], end=' ')\n","    else:\n","      print(merc[i])\n","\n","def adicionar(merc, item):\n","  merc.append(item)\n","def remover(merc, item):\n","  if item in merc:\n","    merc.remove(item)\n","  else:\n","    print(f'código {item} não encontrado')\n","\n","comando = input().split()\n","while comando[0] != 'encerrar':\n","  if (comando[0] == 'adicionar'):\n","    adicionar(lista, int(comando[1]))\n","  elif (comando[0] == 'remover'):\n","    remover(lista, int(comando[1]))\n","  else:\n","    exibir(lista)\n","\n","  comando = input().split()\n","exibir(lista)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cmYDkCQEj0xP","executionInfo":{"status":"ok","timestamp":1685015491504,"user_tz":180,"elapsed":15151,"user":{"displayName":"Lucas Seiti Kawaguchi Goto","userId":"15614933718590696321"}},"outputId":"d5d86b3c-763a-44c2-bfb9-2d88b6bb2c2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3 5 12\n","adicionar 2\n","exibir\n","2 3 5 12\n","encerrar\n","2 3 5 12\n"]}]},{"cell_type":"code","source":["lista= input().split()\n","\n","if lista != []:\n","  for i in range(len(lista)):\n","    lista[i] = int(lista[i])\n","def adicionar(merc, item):\n","  merc.append(item)\n","\n","def remover(merc, item):\n","  if item in merc:\n","    merc.remove(item)\n","  else:\n","    print(f'código {item} não encontrado')\n","\n","def exibir(merc):\n","  merc.sort()\n","\n","  for i in range(len(merc)):\n","    if (i < len(merc) - 1):\n","      print(merc[i], end=' ')\n","    else:\n","      print(merc[i])\n","\n","comando = input().split()\n","\n","while comando[0] != 'encerrar':\n","  if (comando[0] == 'adicionar'):\n","    adicionar(lista, int(comando[1]))\n","  elif (comando[0] == 'remover'):\n","    remover(lista, int(comando[1]))\n","  else:\n","    exibir(lista)\n","  comando = input().split()\n","exibir(lista)"],"metadata":{"id":"Al9X5IkNxNIV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["N = int(input())\n","\n","def obter_notas():\n","  notas = []\n","\n","  for _ in range(N):\n","    notas.append(float(input()))\n","\n","  return notas\n","\n","def obter_notas_finais(notas_originais, novas_notas):\n","  quantidade_notas_alteradas = 0\n","\n","  for i in range(len(notas_originais)):\n","    if novas_notas[i] == 10 and notas_originais[i] < 10:\n","      novas_notas[i] = min(notas_originais[i] + 2, 10)\n","      quantidade_notas_alteradas += 1\n","\n","  return quantidade_notas_alteradas\n","\n","def exibir_notas_alteradas(notas_originais, notas_finais, quantidade_notas_alteradas):\n","  print(f'NOTAS ALTERADAS: {quantidade_notas_alteradas}')\n","\n","  for i in range(N):\n","    nota_alterada = '*' if notas_originais[i] != notas_finais[i] else '-'\n","    print(f'{nota_alterada} ({i+1:03}) original: {notas_originais[i]:05.2f} | final: {notas_finais[i]:05.2f}')\n","\n","if 1 <= N <= 999:\n","  notas_originais = obter_notas()\n","  novas_notas = obter_notas()\n","  quantidade_notas_alteradas = obter_notas_finais(notas_originais, novas_notas)\n","  exibir_notas_alteradas(notas_originais, novas_notas, quantidade_notas_alteradas)\n"],"metadata":{"id":"9pOnawlf_x-s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def coleta_canais(qtd_canais):\n","   canais = []\n","   for _ in range(qtd_canais):\n","       nome,inscritos,monetizacao,premium = input().split(';')\n","       inscritos= int(inscritos)\n","       monetizacao = float(monetizacao)\n","       premium = premium == 'sim'\n","       canais.append([nome,inscritos,monetizacao,premium])\n","   return canais\n","\n","def bonificacao(canais, fixo_premium,fixo_nao_premium):\n","   bonus = []\n","\n","   for canal in canais:\n","       valor = canal[2]\n","       if canal [3]:\n","           valor += canal[1] // 1000 * fixo_premium\n","       else:\n","           valor +=canal[1] // 1000 * fixo_nao_premium\n","       bonus.append([canal[0], valor])\n","   return bonus\n","\n","def exibe (bonus):\n","   print(5* '-')\n","   print('BÔNUS')\n","   print(5* '-')\n","   for registro in bonus:\n","       print(f'{registro[0]}: R$ {registro[1]:.2f}')\n","\n","qtd_canais = int(input())\n","canais = coleta_canais(qtd_canais)\n","fixo_premium = float(input())\n","fixo_nao_premium = float(input())\n","bonus = bonificacao(canais,fixo_premium,fixo_nao_premium)\n","exibe(bonus)"],"metadata":{"id":"ZlOskBjw8k6a"},"execution_count":null,"outputs":[]}]}